{"version":3,"file":"static/js/544.fb8a3373.chunk.js","mappings":"mLACA,EAAyB,uB,SCezB,MAbA,WACE,OACE,SAAC,KAAD,CACEA,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,kBACVC,aAAcC,EACdC,SAAS,GAGd,C,mFCbD,GAAgB,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,0B,SCI5IC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWN,EAAAA,KAAf,SACGG,EAAOI,KAAI,SAAAC,GAAK,OACf,eAAmBF,UAAWN,EAAAA,KAA9B,UACE,UAAC,KAAD,CACES,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMR,GACfE,UAAWN,EAAAA,KAHb,UAKGQ,EAAMK,aACL,gBACEC,IAAG,0CAAqCN,EAAMK,aAC9CE,IAAKP,EAAMQ,MACXV,UAAWN,EAAAA,OAGb,SAAC,MAAD,CAAgBM,UAAWN,EAAAA,QAE7B,eAAIM,UAAWN,EAAAA,MAAf,SAA2BQ,EAAMQ,YAf5BR,EAAME,GADA,KAsBtB,C,kHCGD,UA7Ba,WACX,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACED,EAAU,WADZ,mBAG2BE,EAAAA,EAAAA,MAH3B,gBAGYC,EAHZ,EAGYA,KACRL,EAAkBK,EAAKC,SACvBJ,EAAU,YALd,kDAOIK,QAAQC,IAAI,KAAMC,SAClBP,EAAU,YARd,2DADc,uBAAC,WAAD,wBAadQ,EACD,GAAE,KAGD,6BACE,2CACY,YAAXT,IAAwB,SAAC,IAAD,IACb,aAAXA,IAAyB,yDAC1B,SAAC,IAAD,CAAYjB,OAAQe,MAGzB,C,+LC/BKY,EAAW,+BACXC,EAAU,mCAET,SAAeR,IAAtB,4CAAO,OAAP,oBAAO,oGACcS,EAAAA,EAAAA,IAAA,UACdF,EADc,uCACyBC,IAFvC,cACCP,EADD,yBAIEA,GAJF,kEAOA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACaI,EADb,oBAC8BH,IAFhD,uBACGP,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,oBACmBL,IAFrC,cACCM,EADD,yBAIEA,EAASb,MAJX,kEAOA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BAC2BL,IAF7C,cACCM,EADD,yBAIEA,EAASb,KAAKe,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAM,EADA,4BAC2BL,IAF7C,cACCM,EADD,yBAIEA,EAASb,KAAKC,SAJhB,kE","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <Circles\n      height=\"200\"\n      width=\"200\"\n      color=\"#2db2ff\"\n      ariaLabel=\"circles-loading\"\n      wrapperClass={css.loader}\n      visible={true}\n    />\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"link\":\"MoviesList_link__8rTGX\",\"title\":\"MoviesList_title__PB2c8\",\"icon\":\"MoviesList_icon__A8S+S\"};","import { Link, useLocation } from 'react-router-dom';\nimport { IoImageOutline } from 'react-icons/io5';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.item}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            className={css.link}\n          >\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                alt={movie.title}\n                className={css.img}\n              />\n            ) : (\n              <IoImageOutline className={css.icon} />\n            )}\n            <h3 className={css.title}>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { getTrandingMovies } from '../../services/api';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport Loader from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [trandingMovies, setTrandingMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    async function fetchTrandingMovies() {\n      setStatus('pending');\n      try {\n        const { data } = await getTrandingMovies();\n        setTrandingMovies(data.results);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error.message);\n        setStatus('rejected');\n      }\n    }\n\n    fetchTrandingMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h1> Sorry something went wrong</h1>}\n      <MoviesList movies={trandingMovies} />\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '527e0abd6c1939f1ffcc5ad4666908d5';\n\nexport async function getTrandingMovies() {\n  const data = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data.results;\n}\n"],"names":["height","width","color","ariaLabel","wrapperClass","css","visible","MoviesList","movies","location","useLocation","className","map","movie","to","id","state","from","poster_path","src","alt","title","useState","trandingMovies","setTrandingMovies","status","setStatus","useEffect","getTrandingMovies","data","results","console","log","message","fetchTrandingMovies","BASE_URL","API_KEY","axios","getMoviesByQuery","query","getMovieDetails","movieId","responce","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}