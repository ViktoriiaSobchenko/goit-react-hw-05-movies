{"version":3,"file":"static/js/418.2aea6bc5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MoviesDetails/MovieDetails.module.css?1850","pages/MoviesDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <Circles\n      height=\"200\"\n      width=\"200\"\n      color=\"#2db2ff\"\n      ariaLabel=\"circles-loading\"\n      wrapperClass={css.loader}\n      visible={true}\n    />\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__t4okL\",\"back_link\":\"MovieDetails_back_link__Tv1IZ\",\"link\":\"MovieDetails_link__OL61d\",\"wrapper\":\"MovieDetails_wrapper__cRM7N\",\"img\":\"MovieDetails_img__X1wJS\",\"icon\":\"MovieDetails_icon__X0RJJ\",\"list\":\"MovieDetails_list__nSMoz\"};","import { useEffect, useState, useRef, Suspense } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from '../../services/api';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { IoImageOutline } from 'react-icons/io5';\nimport Loader from '../../components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setStatus('pending');\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error.message);\n        setStatus('rejected');\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <main>\n      <Link to={backLink.current} className={css.back_link}>\n        <button type=\"button\" className={css.button}>\n          <IoArrowBack /> Go back\n        </button>\n      </Link>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h1> Sorry something went wrong</h1>}\n      {movie && (\n        <>\n          <div className={css.wrapper}>\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                alt={movie.title}\n                className={css.img}\n              />\n            ) : (\n              <IoImageOutline className={css.icon} />\n            )}\n\n            <div>\n              <h1>{movie.original_title}</h1>\n              <p>User Score: {Math.round(movie.vote_average * 10)} %</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h2>Genres</h2>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </div>\n          <div>\n            <h2>Additional information</h2>\n            <ul className={css.list}>\n              <li>\n                <NavLink\n                  to=\"cast\"\n                  className={css.link}\n                  style={({ isActive }) =>\n                    isActive\n                      ? {\n                          color: '#2db2ff',\n                        }\n                      : { color: '#ffffff' }\n                  }\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"reviews\"\n                  className={css.link}\n                  style={({ isActive }) =>\n                    isActive\n                      ? {\n                          color: '#2db2ff',\n                        }\n                      : { color: '#ffffff' }\n                  }\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '527e0abd6c1939f1ffcc5ad4666908d5';\n\nexport async function getTrandingMovies() {\n  const data = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data.results;\n}\n"],"names":["height","width","color","ariaLabel","wrapperClass","css","visible","useState","movie","setMovie","status","setStatus","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","getMovieDetails","data","console","log","message","to","current","className","type","Loader","poster_path","src","alt","title","original_title","Math","round","vote_average","overview","genres","map","genre","name","join","style","isActive","Suspense","BASE_URL","API_KEY","getTrandingMovies","axios","getMoviesByQuery","query","responce","getMovieCast","cast","getMovieReviews","results"],"sourceRoot":""}