{"version":3,"file":"static/js/938.0c428402.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Muvies.module.css?5658","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <Circles\n      height=\"200\"\n      width=\"200\"\n      color=\"#2db2ff\"\n      ariaLabel=\"circles-loading\"\n      wrapperClass={css.loader}\n      visible={true}\n    />\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"link\":\"MoviesList_link__8rTGX\",\"title\":\"MoviesList_title__PB2c8\",\"icon\":\"MoviesList_icon__A8S+S\"};","import { Link, useLocation } from 'react-router-dom';\nimport { IoImageOutline } from 'react-icons/io5';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.item}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            className={css.link}\n          >\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                alt={movie.title}\n                className={css.img}\n              />\n            ) : (\n              <IoImageOutline className={css.icon} />\n            )}\n            <h3 className={css.title}>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Muvies_form__S6lHv\",\"button\":\"Muvies_button__HC6-7\",\"input\":\"Muvies_input__M9P5J\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from '../../services/api';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport Loader from '../../components/Loader/Loader';\nimport css from './Muvies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchQuery = evt.currentTarget.elements.searchQuery.value.trim();\n    if (searchQuery === '') {\n      return alert('Please enter word to search');\n    }\n    setSearchParams({ query: searchQuery });\n    evt.currentTarget.reset();\n  };\n  useEffect(() => {\n    if (!query) return;\n    async function fetchMoviesByQuery() {\n      setStatus('pending');\n      try {\n        const data = await getMoviesByQuery(query);\n        if (data.results.length === 0) {\n          setStatus('rejected');\n          return;\n        }\n        setMovies(data.results);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error.message);\n        setStatus('rejected');\n      }\n    }\n    fetchMoviesByQuery();\n  }, [query]);\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.button}>\n          Search\n        </button>\n      </form>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && (\n        <h1>\n          Sorry something went wrong. We don't have any movie for this query.\n          Try again.\n        </h1>\n      )}\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '527e0abd6c1939f1ffcc5ad4666908d5';\n\nexport async function getTrandingMovies() {\n  const data = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getMoviesByQuery(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return responce.data;\n}\n\nexport async function getMovieCast(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce.data.cast;\n}\n\nexport async function getMovieReviews(movieId) {\n  const responce = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return responce.data.results;\n}\n"],"names":["height","width","color","ariaLabel","wrapperClass","css","visible","MoviesList","movies","location","useLocation","className","map","movie","to","id","state","from","poster_path","src","alt","title","useState","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMoviesByQuery","data","results","length","console","log","message","fetchMoviesByQuery","onSubmit","evt","preventDefault","searchQuery","currentTarget","elements","value","trim","alert","reset","type","name","autoComplete","autoFocus","placeholder","Loader","BASE_URL","API_KEY","getTrandingMovies","axios","getMovieDetails","movieId","responce","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}